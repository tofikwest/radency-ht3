{
	"info": {
		"_postman_id": "d3abec78-4e9a-46d1-9763-451deb4b8af9",
		"name": "notes",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "All Notes",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/notes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"notes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Summary",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/notes/stats/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"notes",
						"stats",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "By ID",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const baseUrl = pm.collectionVariables.get(\"baseUrl\");",
							"pm.sendRequest(baseUrl + \"/notes\", function (err, response) {",
							"    console.log(response.json());",
							"    const uuid = response.json()[0].id;",
							"    pm.collectionVariables.set(\"uuid\", uuid);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/notes/{{uuid}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"notes",
						"{{uuid}}"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Note",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": 4,\n    \"category\": \"idea\",\n    \"content\": \"Exercitation 20/20/2000 voluptate laborum consequat eu consectetur cillum esse ipsum laboris dolor nostrud minim. Quis culpa proident id tempor. Amet commodo proident sit excepteur cupidatat consequat fugiat irure quis duis consectetur. In incididunt occaecat ullamco esse qui deserunt elit deserunt voluptate elit aliqua magna. Duis sint non laboris mollit.\\r\\n\",\n    \"isArchived\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/notes/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"notes",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Note",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const baseUrl = pm.collectionVariables.get(\"baseUrl\");",
							"pm.sendRequest(baseUrl + \"/notes\", function (err, response) {",
							"    console.log(response.json());",
							"    const uuid = response.json()[0].id;",
							"    pm.collectionVariables.set(\"uuid\", uuid);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"isArchived\": true,\n    \"name\": \"Name was changed\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/notes/{{uuid}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"notes",
						"{{uuid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const baseUrl = pm.collectionVariables.get(\"baseUrl\");",
							"pm.sendRequest(baseUrl + \"/notes\", function (err, response) {",
							"    console.log(response.json());",
							"    const uuid = response.json()[0].id;",
							"    pm.collectionVariables.set(\"uuid\", uuid);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/notes/{{uuid}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"notes",
						"{{uuid}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000"
		},
		{
			"key": "uuid",
			"value": ""
		}
	]
}